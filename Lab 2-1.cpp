#include<iostream>
using namespace std;

bool is_prime(int N) // функция для проверки числа на "простоту"
{
	if (N <= 1) // если число меньше или равно 1, оно не является простым
		return false;

	for (int i = 2; i < N / 2; i++) { // проходим по числам от 2 до половины введенного числа, так как делитель числа не может быть больше его половины
		if (N % i == 0) // если у числа есть делители, кроме самого себя и единицы, выведем ложь
			return false;
	}

	return true;
}

int nearest_prime(int N) // функция для вычисления ближайшего простого числа к введенному
{
	if (is_prime(N)) // если введенное число уже является простым, его и необходимо вернуть
		return N;

	int SmallerPrime = N-1, BiggerPrime = N + 1; // инициализация переменных для поиска ближайших простых чисел

	while (true) { // бесконечный цикл для нахождение ближайшего простого числа
		if (is_prime(SmallerPrime)) 
			return SmallerPrime;
		else if (is_prime(BiggerPrime))
			return BiggerPrime;

		else
			SmallerPrime--;
			BiggerPrime++;
	}
}

int main() // главная функция
{
	int N; // число, которое введет пользователь
	cin >> N; // ввод числа с клавиатуры

	N = N - nearest_prime(N); // поиск числа в ряду, заданному заданием

	if (N < 0) // если получилось так, что разница ближайшего простого числа и введенного, выведем обратную величину 
		cout << N * -1;

	else // в противном случае выведем саму разницу
		cout << N;
}