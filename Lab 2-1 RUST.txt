use std::io;

fn is_prime(n: i32) -> bool {
    if n <= 1 {
        return false;
    }

    for i in 2..(n / 2) {
        if n % i == 0 {
            return false;
        }
    }

    true
}

fn nearest_prime(n: i32) -> i32 {
    if is_prime(n) {
        return n;
    }

    let mut smaller_prime = n - 1;
    let mut bigger_prime = n + 1;

    loop {
        if is_prime(smaller_prime) {
            return smaller_prime;
        } else if is_prime(bigger_prime) {
            return bigger_prime;
        } else {
            smaller_prime -= 1;
            bigger_prime += 1;
        }
    }
}

fn main() {
    let mut n = String::new();
    io::stdin().read_line(&mut n).expect("Failed to read input.");
    let n: i32 = n.trim().parse().expect("Invalid input.");

    let result = n - nearest_prime(n);

    if result < 0 {
        println!("{}", result * -1);
    } else {
        println!("{}", result);
    }
}