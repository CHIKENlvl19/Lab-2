import Foundation

func isPrime(_ N: Int) -> Bool {
    if N <= 1 {
        return false
    }
    
    for i in 2..<N/2 {
        if N % i == 0 {
            return false
        }
    }
    
    return true
}

func nearestPrime(_ N: Int) -> Int {
    if isPrime(N) {
        return N
    }
    
    var smallerPrime = N - 1
    var biggerPrime = N + 1
    
    while true {
        if isPrime(smallerPrime) {
            return smallerPrime
        } else if isPrime(biggerPrime) {
            return biggerPrime
        } else {
            smallerPrime -= 1
            biggerPrime += 1
        }
    }
}

var N = Int(readLine()!)!

N = N - nearestPrime(N)

if N < 0 {
    print(N * -1)
} else {
    print(N)
}